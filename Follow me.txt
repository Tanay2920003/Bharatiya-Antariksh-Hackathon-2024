--Voice enabled user interface for geospatial map based web-applications.

requirements
-map api
-local ai
-Datasets
-GIS libraries
-Speech to text


objectives

Develop a voice-activated system that can accurately interpret and execute user commands related to user interface of map based web application.

Demonstrate integration/compatibility with existing web GIS applications using libraries such as Leaflet and OpenLayers.


Ensure the system is user-friendly and accessible, even for non-technical users.

---optional
Utilize the computational power of GPUs/NPUs to enhance the performance and responsiveness of the system. (preferable but not mandatory)


outcomes

-------------------------

A fully functional prototype of a voice-activated geospatial web GIS system
. 


Demonstration of the system's ability to process voice commands and execute geospatial queries. For e.g. Please zoom to Ahmedabad, please show me the road layer, please show me the highways.




An evaluation report detailing the system's performance, including speed, accuracy



Steps to be done ----------------

Expected Solution / Steps to be followed to achieve the objectives:



Prepare commands for iterating and benchmarking during development.
Identify and evaluate voice recognition models online/offline
Integrate the voice recognition model with a web GIS application using Leaflet or OpenLayers.


Implement features for real-time geospatial data interaction based on voice commands, such as:
  Navigating to a specific location on the map
  Showing or hiding specific layers (e.g., satellite view, terrain view)
  Zooming in and out
  Adding markers
  Test the system for accuracy, responsiveness, and user-friendliness.  
  Iterate and refine the system based on feedback and performance evaluations.
  Prepare a comprehensive report and demonstration of the final prototype.
Evaluation Parameters:
  Accuracy of voice command recognition and execution
  Performance and responsiveness of the system
  Ability to do voice recognition using on-device hardware ( without using available SDKs or online    APIs )
  User-friendliness and accessibility of the interface
s
  Integration and functionality with existing web GIS libraries.
  Innovation and creativity in the solution approach
  Quality and comprehensiveness of the documentation and presentation






--------------

Using 
Dataset Required:
Open access WMS services and their descriptions for e.g. OSM layers, WMS Services from Bhoonidhi/Bhuvan, NASA Worldview. Copernicus e.t.c




Suggested Tools/Technologies:
Programming languages: Python, JavaScript
Machine Learning frameworks: Tensorflow/TensorFlow.js (lightweight js port of tensorflow)
Voice recognition APIs: Google Speech-to-Text, Microsoft Azure Speech Service
GIS libraries: Leaflet, OpenLayers
NPU/WebGL libraries and SDKs.









